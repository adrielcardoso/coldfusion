var WFileManager=function(context){if(typeof File!="undefined"&&typeof FileTransfer!="undefined"){var self=this;this.successObject=new DnfiStatus("WFileManager",dnfi.SUCCESS.code,dnfi.SUCCESS.message);this.fileSystem=null;this.persistentFileSystem=null;this.tempFileSystem=null;this.FILE_NOT_FOUND_ERR=FileTransferError.FILE_NOT_FOUND_ERR;this.INVALID_URL_ERR=FileTransferError.INVALID_URL_ERR;this.CONNECTION_ERR=FileTransferError.CONNECTION_ERR;this.ABORT_ERR=FileTransferError.ABORT_ERR;this.currentWorkingDirEntryObject=
null;this.source={type:null,provider:"local",url:null,path:null,name:null,auth:{}};this.destination={type:"local",provider:"",url:"",path:null,name:null,auth:{}};var _validateEntry=function(context,path,type){if(typeof path=="string"){if(path!=null&&trim(path)!="")return true;else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_INVALID_NAME_ERROR.code,wFileManagerError.FILE_INVALID_NAME_ERROR.message),null);return false}if(type=="dir"&&path.isDirectory)return true;else if(type==
"file"&&path.isFile)return true;else if(type=="both"&&typeof path.isFile!="undefined")return true;runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),null);return false};var syncFileEntry=function(entry){if(entry!=null){entry.isfile=entry.isFile;entry.isdirectory=entry.isDirectory;entry.fullpath=entry.fullPath}};var syncDirectoryEntry=function(entry){if(entry!=null){entry.isfile=entry.isFile;entry.isdirectory=
entry.isDirectory;entry.fullpath=entry.fullPath}};var handleError=function(context,e,retVal){var dnfiError=null;if(e.code==FileError.NOT_FOUND_ERR)dnfiError=new DnfiStatus("wFileManager",wFileManagerError.FILE_NOT_FOUND_ERROR.code,wFileManagerError.FILE_NOT_FOUND_ERROR.message);else if(e.code==FileError.SECURITY_ERR)dnfiError=new DnfiStatus("wFileManager",wFileManagerError.SECURITY_ERROR.code,wFileManagerError.SECURITY_ERROR.message);else if(e.code==FileError.ABORT_ERR||e.code==FileError.INVALID_MODIFICATION_ERR)dnfiError=
new DnfiStatus("wFileManager",wFileManagerError.ABORT_ERROR.code,wFileManagerError.ABORT_ERROR.message);else if(e.code==FileError.NOT_READABLE_ERR)dnfiError=new DnfiStatus("wFileManager",wFileManagerError.FILE_READ_ERROR.code,wFileManagerError.FILE_READ_ERROR.message);else if(e.code==FileError.ENCODING_ERR)dnfiError=new DnfiStatus("wFileManager",wFileManagerError.FILE_ENCODING_ERROR.code,wFileManagerError.FILE_ENCODING_ERROR.message);else if(e.code==FileError.NO_MODIFICATION_ALLOWED_ERR)dnfiError=
new DnfiStatus("wFileManager",wFileManagerError.FILE_MODIFICATION_NOT_ALLOWED_ERROR.code,wFileManagerError.FILE_MODIFICATION_NOT_ALLOWED_ERROR.message);else if(e.code==FileError.INVALID_STATE_ERR)dnfiError=new DnfiStatus("wFileManager",wFileManagerError.FILE_STATE_ERROR.code,wFileManagerError.FILE_STATE_ERROR.message);else if(e.code==FileError.SYNTAX_ERR)dnfiError=new DnfiStatus("wFileManager",wFileManagerError.FILE_SYNTAX_ERROR.code,wFileManagerError.FILE_SYNTAX_ERROR.message);else if(e.code==FileError.QUOTA_EXCEEDED_ERR)dnfiError=
new DnfiStatus("wFileManager",wFileManagerError.FILE_QUOTA_ERROR.code,wFileManagerError.FILE_QUOTA_ERROR.message);else if(e.code==FileError.TYPE_MISMATCH_ERR)dnfiError=new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message);else if(e.code==FileError.PATH_EXISTS_ERR)dnfiError=new DnfiStatus("wFileManager",wFileManagerError.FILE_EXISTS_ERROR.code,wFileManagerError.FILE_EXISTS_ERROR.message);if(dnfiError==null)dnfiError=new DnfiStatus("wFileManager",
wFileManagerError.GENERAL_ERROR.code,wFileManagerError.GENERAL_ERROR.message);runCallBacks(context.cb,dnfiError,retVal)};var getFilePathFromURL=function(str){var tempStr=str;var strA;if(str.indexOf("file://localhost")==0)strA=str.split("file://localhost");else strA=str.split("file://");if(strA.length>1)tempStr=strA[1];return tempStr};var sortEntries=function(list,sortorder){if(list instanceof Array){function sortControl(){this.col;this.sortType}var controller=[];if(typeof sortorder!="undefined"){var tokens=
sortorder.split(",");var rowIndex=0;for(token in tokens){var singleColumn=tokens[token].split(" ");if(singleColumn.length==2){var obj=new sortControl;obj.col=singleColumn[0];obj.sortType=singleColumn[1];controller[rowIndex]=obj}}}else{var obj=new sortControl;obj.col="name";obj.sortType="asc";controller[0]=obj}if(controller.length>0){var column=controller[0].col;var sortType=controller[0].sortType;list.sort(function(a,b){var val1=a.name+"";var val2=b.name+"";if(column.toLowerCase()=="datemodified"){if(typeof a.modificationTime!=
null&&typeof b.modificationTime!=null){var val1=a.modificationTime.getTime();var val2=b.modificationTime.getTime();if(val1>val2)return 1;else if(val1<val2)return-1}return 0}return val1.localeCompare(val2)});if(sortType.toLowerCase()=="desc")list.reverse()}}};var gettempfileName=function(context){var str=self.tempFileSystem.root.fullPath+"/"+(new Date).getTime();var strA=str.split("file://");if(strA.length>1)str=strA[1];if(!context)return str;else runCallBacks(context.cb,self.successObject,str)};var getdirectoryname=
function(fn){var arr=fn.split("/");if(arr.length==0)return null;if(arr.length==1)return"root";if(arr.length>1)return arr[arr.length-2]};var getResolvedPath=function(path){if(typeof path=="string"){var resolvedPath=path;if(path!=null&&typeof path=="string"){resolvedPath=getFilePathFromURL(path);if(resolvedPath[0]!="/")resolvedPath=self.getWorkingDirectory()+"/"+resolvedPath}return resolvedPath}else if(typeof path.isFile!="undefined")return getResolvedPath(path.toURL())};var getResolvedURI=function(path){if(typeof path==
"string"){var resolvedPath=path;if(__cfclient_os!=undefined&&__cfclient_os!=null)if(__cfclient_os.toLowerCase()=="ios"&&(resolvedPath.indexOf("file://localhost")!=0&&resolvedPath.indexOf("file://")!=0))resolvedPath="file://localhost"+appendSlash(convertToAbsolutePath(resolvedPath));else{if(resolvedPath.indexOf("file://")!=0&&resolvedPath.indexOf("file://localhost")!=0)resolvedPath="file://"+appendSlash(convertToAbsolutePath(resolvedPath))}else resolvedPath=convertToAbsolutePath(resolvedPath);function convertToAbsolutePath(p){if(p!=
null&&typeof p=="string")if(p[0]!="/")return self.getWorkingDirectory()+"/"+p;return p}function appendSlash(p){if(p.length>0)if(p.charAt(0)!="/")return"/"+p;else return p;return"/"}return resolvedPath}else if(typeof path.isFile!="undefined")return path.toURL()};var open=function(context,fileName,mode,data,throwErrorIfExists){var flags={};if(self.fileSystem!=null)if(_validateEntry(context,fileName,"file")){function _append(entry){var append=false;if(mode=="append")append=true;entry.createWriter(function(writer){writer.onwriteend=
function(evt){__$cf._log("file write completed");runCallBacks(context.cb,self.successObject,null)};if(data!=null){if(append)writer.seek(writer.length);writer.write(data)}else runCallBacks(context.cb,self.successObject,null)},function(){handleError(context,e,null);return})}function _process(entry){if(mode=="get"){runCallBacks(context.cb,self.successObject,entry);return}else if(mode=="create"){__$cf._log("created file "+entry.fullPath);runCallBacks(context.cb,self.successObject,entry.fullPath);return}else if(mode==
"write"||(mode=="createandwrite"||mode=="append")){_append(entry);return}}if(typeof fileName=="string"){name=getResolvedPath(fileName);if(mode=="create"||mode=="createandwrite")flags={create:true,exclusive:throwErrorIfExists};else flags={create:false,exclusive:throwErrorIfExists};self.fileSystem.root.getFile(name,flags,function(entry){__$cf._log("File entry found for "+name);_process(entry)},function(e){__$cf._log("File operation error "+e.code);handleError(context,e,null)})}else _process(fileName)}};
var moveOrCopy=function(context,src,dest,copy){var parent=null;var fileName=null;if(self.fileSystem!=null){if(_validateEntry(context,src,"file")){fileName=getResolvedPath(dest);var dPath=getdirectorypath(fileName);var dName=getdirectoryname(fileName);var parentEntry=new DirectoryEntry(dName,dPath);var srcEntry=null;var destEntry=null;getFileEntryForPath(src,function(status,retVal){if(status==1)if(retVal instanceof FileEntry){var fileEntry=retVal;var name1=fileName.substring(fileName.lastIndexOf("/")+
1);var func=null;if(copy)fileEntry.copyTo(parentEntry,name1,function(entry){__$cf._log("File successfully moved/copied to: "+entry.fullPath);runCallBacks(context.cb,self.successObject,entry)},function(e){__$cf._log("Error while trying to copy file - code = "+e.code);handleError(context,e,null)});else fileEntry.moveTo(parentEntry,name1,function(entry){__$cf._log("File successfully moved/copied to: "+entry.fullPath);runCallBacks(context.cb,self.successObject,entry)},function(e){__$cf._log("Error while trying to rename file - code = "+
e.code);handleError(context,e,null)})}else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),null);else{__$cf._log("error: "+retVal.code+" message: "+retVal.message);handleError(context,retVal,null);return}})}}else{runCallBacks(context.cb,new DnfiStatus("WFileManager",WFileManager.NULL_FILESYSTEM_ERROR.code,WFileManager.NULL_FILESYSTEM_ERROR.message),null);return}};var moveOrCopyDirectory=function(context,
source,destination,copy,ren){var newName=null;var parent=null;var dirName=null;if(self.fileSystem!=null){if(_validateEntry(context,source,"dir")&&_validateEntry(context,destination,"dir")){var src=getResolvedPath(source);var dest=getResolvedPath(destination);if(typeof dest=="string"){dirName=dest;if(ren){dirName=getdirectorypath(dest);newName=dest.substring(dest.lastIndexOf("/")+1)}}self.getDirectory({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code){__$cf._log("Destination directory found, fullPath:"+
entry.fullPath);if(typeof src=="string")self.getDirectory({cb:[function(e,srcEntry){__$cf._log("Found source directory");if(e.code==dnfi.SUCCESS.code){var func=null;if(copy)srcEntry.copyTo(entry,null,function(entry){__$cf._log("Directory successfully copied to: "+entry.fullPath);runCallBacks(context.cb,self.successObject,entry)},function(e){__$cf._log("Error while copying the directory - code = "+e.code);handleError(context,e,null)});else srcEntry.moveTo(entry,newName,function(entry){__$cf._log("Directory successfully moved to: "+
entry.fullPath);runCallBacks(context.cb,self.successObject,entry)},function(e){__$cf._log("Error while trying to move directory - code = "+e.code);handleError(context,e,null)})}else{__$cf._log("error: "+e.code+" message: "+e.message);runCallBacks(context.cb,e,null);return}}],ret:"ret"},src);else;return}else runCallBacks(context.cb,e,null)}],ret:"ret"},dirName)}}else{runCallBacks(context.cb,new DnfiStatus("WFileManager",WFileManager.NULL_FILESYSTEM_ERROR.code,WFileManager.NULL_FILESYSTEM_ERROR.message),
null);return}};this.setFileSystem=function(context,fsName){if(_validateDeviceAPI(context,arguments.length-1,1,"setFileSystem")){var t=null;if(typeof fsName!="undefined"&&fsName!=null){switch(fsName.toLowerCase()){case "persistent":if(self.persistentFileSystem!=null){self.fileSystem=self.persistentFileSystem;self.currentWorkingDirEntryObject=self.persistentFileSystem.root;runCallBacks(context.cb,self.successObject,self.fileSystem);return}t=LocalFileSystem.PERSISTENT;break;case "temporary":if(self.tempFileSystem!=
null){self.fileSystem=self.tempFileSystem;self.currentWorkingDirEntryObject=self.tempFileSystem.root;runCallBacks(context.cb,self.successObject,self.fileSystem);return}t=LocalFileSystem.TEMPORARY;break;default:__$cf._log("invalid file system");runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.INVALID_FILESYSTEM_ERROR.code,wFileManagerError.INVALID_FILESYSTEM_ERROR.message),null);return}window.requestFileSystem(t,0,function(fs){self.fileSystem=fs;__$cf._log("valid file system obtained");
if(t==LocalFileSystem.PERSISTENT)self.persistentFileSystem=fs;else if(t==LocalFileSystem.TEMPORARY)self.tempFileSystem=fs;self.currentWorkingDirEntryObject=fs.root;runCallBacks(context.cb,self.successObject,fs);return},function(error){runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILESYSTEM_SET_ERROR.code,wFileManagerError.FILESYSTEM_SET_ERROR.message+" "+error.code),null)});return}}};this.write=function(context,name,data){if(_validateDeviceAPI(context,arguments.length-1,
1,"write")){var myself=this;if(_validateEntry(context,name,"file"))open(context,name,"createandwrite",data)}};this.append=function(context,name,data){if(_validateDeviceAPI(context,arguments.length-1,2,"append"))if(_validateEntry(context,name,"file"))open(context,name,"append",data);else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_INVALID_NAME_ERROR.code,wFileManagerError.FILE_INVALID_NAME_ERROR.message),null)}}var _read=function(context,name,mode){getFileEntryForPath(name,
function(status,ret){if(status===1)if(ret instanceof FileEntry)ret.file(function(f){var reader1=new FileReader;reader1.onloadend=function(evt){runCallBacks(context.cb,self.successObject,evt.target.result)};if(mode=="readdataurl")reader1.readAsDataURL(f);else reader1.readAsText(f)},function(e){handleError(context,e,null)});else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),null);else{__$cf._log("read error "+
ret);handleError(context,ret,null)}})};this.read=function(context,name){if(_validateDeviceAPI(context,arguments.length-1,1,"read")){this.ret;var readObj=this;if(name!=null)_read(context,name,"read")}};this.readAsBase64=function(context,name){if(_validateDeviceAPI(context,arguments.length-1,1,"readAsBase64"))if(name!=null)_read(context,name,"readdataurl")};var getdirectorypath=function(path){var fn=path;if(typeof path!="string")if(typeof path.isFile!="undefined")fn=path.fullPath;var arr=fn.split("/");
if(arr.length==1)return null;if(arr.length==2)if(fn[0]=="/")return"/";else return fn.substring(0,fn.lastIndexOf("/"));if(arr.length>2)return fn.substring(0,fn.lastIndexOf("/"))};var getFileEntryForPath=function(path,callback){function onResolveSuccess(entry){var args=[1,entry];callback.apply(callback,args)}function fail(event){var args=[0,event];callback.apply(callback,args)}if(typeof path=="string"){var fileName=getResolvedURI(path);window.resolveLocalFileSystemURI(fileName,onResolveSuccess,fail)}else if(typeof path.isFile!=
"undefined")onResolveSuccess(path)};this.move=function(context,src,dest){if(_validateDeviceAPI(context,arguments.length-1,2,"move")){moveOrCopy({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code)runCallBacks(context.cb,self.successObject,entry);else runCallBacks(context.cb,e,null)}]},src,dest,false);return}};this.copy=function(context,src,dest){if(_validateDeviceAPI(context,arguments.length-1,2,"copy")){moveOrCopy({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code)runCallBacks(context.cb,self.successObject,
null);else runCallBacks(context.cb,e,null)}]},src,dest,true);return}};this.rename=function(context,source,destination){if(_validateDeviceAPI(context,arguments.length-1,2,"rename"))if(_validateEntry(context,source,"file")){var src=getResolvedPath(source);var dest=getResolvedPath(destination);var srcDir=getdirectorypath(src);var destDir=getdirectorypath(dest);if(srcDir==destDir){self.move({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code)runCallBacks(context.cb,self.successObject,entry);else runCallBacks(context.cb,
e,null)}],ret:"ret"},src,dest);return}else{runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.SOURCE_DESTINATION_SAME_PATH_ERROR.code,wFileManagerError.SOURCE_DESTINATION_SAME_PATH_ERROR.message),null);return}}};this.remove=function(context,fileName){if(_validateDeviceAPI(context,arguments.length-1,1,"remove"))if(_validateEntry(context,fileName,"file"))getFileEntryForPath(fileName,function(status,ret){if(status==1)if(ret instanceof FileEntry){function success(entry){__$cf._log("File removed successfully");
runCallBacks(context.cb,self.successObject,true)}function fail(error){handleError(context,error,null)}ret.remove(success,fail)}else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),null);else handleError(context,ret,null)})};this.getParent=function(context,fileName){if(_validateDeviceAPI(context,arguments.length-1,1,"getParent"))if(_validateEntry(context,fileName,"both")){getFileEntryForPath(fileName,
function(status,ret){if(status==1)ret.getParent(function(entry){runCallBacks(context.cb,self.successObject,entry)},function(e){handleError(context,e,null)});else handleError(context,ret,null)});return}};this.toURI=function(context,fileName){if(_validateDeviceAPI(context,arguments.length-1,1,"toURI"))if(_validateEntry(context,fileName,"both"))getFileEntryForPath(fileName,function(status,ret){if(status==1)runCallBacks(context.cb,self.successObject,ret.toURL());else handleError(context,ret,null)})};
this.exists=function(context,name){if(_validateDeviceAPI(context,arguments.length-1,1,"exists"))if(_validateEntry(context,name,"file"))if(self.fileSystem!=null){var fileName=name;if(typeof name.fullPath=="string")fileName=name.fullPath;getFileEntryForPath(fileName,function(status,ret){if(status==1)if(ret instanceof FileEntry)runCallBacks(context.cb,self.successObject,true);else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),
null);else{__$cf._log("File operation error "+ret.code);runCallBacks(context.cb,self.successObject,false)}})}};this.directoryExists=function(context,dPath){if(_validateDeviceAPI(context,arguments.length-1,1,"directoryExists"))if(_validateEntry(context,dPath,"dir"))if(self.fileSystem!=null){var fileName=dPath;if(typeof dPath.fullPath=="string")fileName=dPath.fullPath;getFileEntryForPath(fileName,function(status,ret){if(status==1)if(ret instanceof DirectoryEntry)runCallBacks(context.cb,self.successObject,
true);else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),null);else{__$cf._log("Directory operation error "+ret.code);runCallBacks(context.cb,self.successObject,false)}})}};this.getWorkingDirectory=function(context){var str=self.currentWorkingDirEntryObject.fullPath;str=getFilePathFromURL(str);if(!context)return str;runCallBacks(context.cb,self.successObject,str)};this.setWorkingDirectory=function(context,
dPath){if(_validateDeviceAPI(context,arguments.length-1,1,"setWorkingDirectory"))if(_validateEntry(context,dPath,"dir")){var dirPath=getResolvedPath(dPath);var dEntry=self.getDirectory({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code){__$cf._log("Successfully set working directory to:"+entry.fullPath);self.currentWorkingDirEntryObject=entry;runCallBacks(context.cb,self.successObject,null)}else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.DIRECTORY_LOOKUP_ERROR.code,wFileManagerError.DIRECTORY_LOOKUP_ERROR.message),
null)}],ret:"ret"},dirPath)}};this.createDirectory=function(context,dirPath,throwError){if(_validateDeviceAPI(context,arguments.length-1,1,"createDirectory")){var dEntry=null;var throwErr=true;if(throwError)throwErr=throwError;if(dirPath==null||trim(dirPath)=="")runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_INVALID_NAME_ERROR.code,wFileManagerError.FILE_INVALID_NAME_ERROR.message),null);dirPath=getFilePathFromURL(dirPath);if(typeof dirPath=="string"){if(dirPath[0]==
"/")dEntry=self.fileSystem.root;else dEntry=self.currentWorkingDirEntryObject;dEntry.getDirectory(dirPath,{create:true,exclusive:throwErr},function(entry){__$cf._log("directory created: "+entry.name+"  full path: "+entry.fullPath);runCallBacks(context.cb,self.successObject,entry)},function(e){__$cf._log("Error while creating the directory, code: "+e.code);handleError(context,e,null)});return}else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,
wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),null)}};this.get=function(context,name){if(_validateDeviceAPI(context,arguments.length-1,1,"get"))if(self.fileSystem!=null){var fileName=name;if(typeof name.fullPath=="string")fileName=name.fullPath;getFileEntryForPath(fileName,function(status,ret){if(status==1)if(ret instanceof FileEntry)runCallBacks(context.cb,self.successObject,ret);else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),
null);else{__$cf._log("Error getting file/directory - error code "+ret.code);handleError(context,ret,null)}})}else runCallBacks(context.cb,new DnfiStatus("WFileManager",WFileManager.NULL_FILESYSTEM_ERROR.code,WFileManager.NULL_FILESYSTEM_ERROR.message),null)};this.getDirectory=function(context,dPath){if(_validateDeviceAPI(context,arguments.length-1,1,"getDirectory"))if(self.fileSystem!=null){var fileName=dPath;if(typeof dPath.fullPath=="string")fileName=dPath.fullPath;getFileEntryForPath(fileName,
function(status,ret){if(status==1)if(ret instanceof DirectoryEntry)runCallBacks(context.cb,self.successObject,ret);else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),null);else{__$cf._log("Error getting file/directory - error code "+ret.code);handleError(context,ret,null)}})}else runCallBacks(context.cb,new DnfiStatus("WFileManager",WFileManager.NULL_FILESYSTEM_ERROR.code,WFileManager.NULL_FILESYSTEM_ERROR.message),
null)};this.getFileSystem=function(context){runCallBacks(context.cb,self.successObject,self.fileSystem)};this.listDirectory=function(context,dirPath,sortType){if(_validateDeviceAPI(context,arguments.length-1,1,"listDirectory")){var dirReader=null;if(_validateEntry(context,dirPath,"dir"))getFileEntryForPath(dirPath,function(status,ret){if(status==1)if(ret instanceof DirectoryEntry){ret.createReader().readEntries(function(entries){if(typeof sortType!="undefined"){function returnSortedEntries(entries,
s){sortEntries(entries,s);runCallBacks(context.cb,self.successObject,entries)}function getModificationDate(index){if(index>=0){var tempEntry=entries[index];function success(metadata){entries[index].modificationTime=metadata.modificationTime;index=index-1;getModificationDate(index)}function error(){__$cf._log("error getting metadata for "+entries[index].name);entries[index].modificationTime=null}tempEntry.getMetadata(success,error)}else returnSortedEntries(entries,sortType)}if(findNoCase("datemodified",
sortType)>0)getModificationDate(entries.length-1);else returnSortedEntries(entries,sortType)}else runCallBacks(context.cb,self.successObject,entries)},function(e){handleError(context,e,null)});return}else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.FILE_TYPE_MISMATCH_ERROR.code,wFileManagerError.FILE_TYPE_MISMATCH_ERROR.message),null);else handleError(context,ret,null)})}};this.removeDirectory=function(context,dirPath,recurse){if(_validateDeviceAPI(context,arguments.length-
1,1,"removeDirectory")){var err;var removeSuccess=function(entry){__$cf._log("successfully removed directory");runCallBacks(context.cb,self.successObject,true)};var removeFail=function(e){__$cf._log("Erro while removing directory - code: "+e.code);handleError(context,e,null)};var _remove=function(entry){if(recurse==true)entry.removeRecursively(removeSuccess,removeFail);else entry.remove(removeSuccess,removeFail)};if(_validateEntry(context,dirPath,"dir"))if(typeof dirPath=="string"){var dPath=getResolvedPath(dirPath);
self.getDirectory({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code)_remove(entry);else runCallBacks(context.cb,e,null)}],ret:"ret"},dPath)}else _remove(dirPath)}};this.moveDirectory=function(context,src,dest,ren){if(_validateDeviceAPI(context,arguments.length-1,2,"moveDirectory")){moveOrCopyDirectory({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code)runCallBacks(context.cb,self.successObject,entry);else runCallBacks(context.cb,e,null)}]},src,dest,false,ren);return}};this.copyDirectory=function(context,
src,dest){if(_validateDeviceAPI(context,arguments.length-1,2,"copyDirectory")){moveOrCopyDirectory({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code)runCallBacks(context.cb,self.successObject,null);else runCallBacks(context.cb,e,null)}]},src,dest,true);return}};this.renameDirectory=function(context,src,dest){if(_validateDeviceAPI(context,arguments.length-1,2,"renameDirectory"))if(_validateEntry(context,src,"dir")){var srcDir=getdirectorypath(getResolvedPath(src));var destDir=getdirectorypath(getResolvedPath(dest));
if(srcDir==destDir){if(typeof src=="string"&&src[0]!="/"){src=self.getWorkingDirectory()+"/"+src;dest=self.getWorkingDirectory()+"/"+dest}moveOrCopyDirectory({cb:[function(e,entry){if(e.code==dnfi.SUCCESS.code)runCallBacks(context.cb,self.successObject,entry);else runCallBacks(context.cb,e)}],ret:"ret"},src,dest,false,true);return}else{runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.SOURCE_DESTINATION_SAME_PATH_ERROR.code,wFileManagerError.SOURCE_DESTINATION_SAME_PATH_ERROR.message),
null);return}}};this.upload=function(context,filePath,url,success,error,opts){if(_validateDeviceAPI(context,arguments.length-1,4,"upload")){var failcb=function(e){var argsArray=[e];errorCallback.apply(error,argsArray)};var callbackFunction=null;var errorCallback=null;if(typeof success=="undefined")runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.CALLBACK_ERROR.code,wFileManagerError.CALLBACK_ERROR.message),null);if(typeof success=="string")callbackFunction=_getFunctionForName(success);
else callbackFunction=success;if(typeof error=="string")errorCallback=_getFunctionForName(error);else errorCallback=error;var _cb=function(pos){__$cf._log("file upload successful");var argsArray=[pos];callbackFunction.apply(success,argsArray)};if(typeof callbackFunction=="function"){if(errorCallback!=null)if(!(typeof errorCallback=="function")){runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.CALLBACK_ERROR.code,wFileManagerError.CALLBACK_ERROR.message),null);return}var ft=
new FileTransfer;var fileURI="";fileURI=getResolvedURI(filePath);var options=new FileUploadOptions;options.fileKey="file";options.fileName=fileURI.substr(fileURI.lastIndexOf("/")+1);options.mimeType="text/plain";var trustAllHosts=false;if(typeof opts!="undefined"){if(opts.trustAllHosts)trustAllHosts=opts.trustAllHosts;if(opts.mimeType)options.mimeType=opts.mimeType;if(opts.fileKey)options.fileKey=opts.fileKey}ft.upload(fileURI,encodeURI(url),_cb,failcb,options,trustAllHosts);runCallBacks(context.cb,
self.successObject,null)}else runCallBacks(context.cb,new DnfiStatus("wFileManager",wFileManagerError.CALLBACK_ERROR.code,wFileManagerError.CALLBACK_ERROR.message),null);return}};this.download=function(context,url,filepath,success,error,opts){if(_validateDeviceAPI(context,arguments.length-1,4,"download")){var failcb=function(e){var argsArray=[e];errorCallback.apply(error,argsArray)};var callbackFunction=null;var errorCallback=null;if(typeof success=="undefined")runCallBacks(context.cb,new DnfiStatus("wFileManager",
wFileManagerError.CALLBACK_ERROR.code,wFileManagerError.CALLBACK_ERROR.message),null);if(typeof success=="string")callbackFunction=_getFunctionForName(success);else callbackFunction=success;if(typeof error=="string")errorCallback=_getFunctionForName(error);else errorCallback=error;var _cb=function(pos){__$cf._log("file download successful");var argsArray=[pos];callbackFunction.apply(success,argsArray)};if(typeof callbackFunction=="function"){if(errorCallback!=null)if(!(typeof errorCallback=="function")){runCallBacks(context.cb,
new DnfiStatus("wFileManager",wFileManagerError.CALLBACK_ERROR.code,wFileManagerError.CALLBACK_ERROR.message),null);return}var ft=new FileTransfer;var fileURI=getResolvedPath(filepath);var options=new FileUploadOptions;var trustAllHosts=false;if(typeof opts!="undefined"){if(opts.trustAllHosts)trustAllHosts=opts.trustAllHosts;if(opts.headers)options.headers=opts.headers}ft.download(encodeURI(url),fileURI,_cb,failcb,trustAllHosts,options);runCallBacks(context.cb,self.successObject,null)}else runCallBacks(context.cb,
new DnfiStatus("wFileManager",wFileManagerError.CALLBACK_ERROR.code,wFileManagerError.CALLBACK_ERROR.message),null);return}};this.toString=function(){return"WFileManager"};if(typeof context!="undefined"&&context!=null){__$cf._log("Initializing FileManager...");self.setFileSystem({cb:[function(e,fs){if(e.code==dnfi.SUCCESS.code){__$cf._log("temporary file system obtained:"+self.tempFileSystem.root.fullPath);self.setFileSystem({cb:[function(e,fs){__$cf._log("persistent file system obtained: "+self.persistentFileSystem.root.fullPath);
this.successObject=new DnfiStatus("DNFI",dnfi.SUCCESS.code,dnfi.SUCCESS.message);runCallBacks(context.cb,self.successObject,self)}]},"persistent");return}else runCallBacks(context.cb,self.successObject,null)}]},"temporary")}};
